# basically get's the kinesis records generated by Rekognition Stream
# and consuming them as a K_SINK
import json
import logging
import os
from consumer_helper import *

from flask import Flask, request

app = Flask(__name__)

@app.route('/', methods=["POST"])
def received_event():
    video_file = download_and_censor(job["InputInformation"]["KinesisVideo"]["StreamArn"], job)
    censored = censor(video_file, job)
    save_video(censored, job, ctx["video_stream"], ctx["storage"])
    pass


def info(msg):
    app.logger.info(msg)
    

if __name__ != '__main__':
    # Redirect Flask logs to Gunicorn logs
    gunicorn_logger = logging.getLogger('gunicorn.error')
    app.logger.handlers = gunicorn_logger.handlers
    app.logger.setLevel(gunicorn_logger.level)
    info('Consuming Video ...')
else:
    app.run(debug=True, host='0.0.0.0', port=int(os.environ.get('PORT', 8080)))